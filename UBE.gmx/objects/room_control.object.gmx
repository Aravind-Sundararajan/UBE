<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clip_surface = -1
mask_surface = -1
surf_black = -1;
clip_x = 0;
clip_y = 0;
clip_r = 60;
clip_width = 300;
 clip_height= 300;
 val = 1;
 global.val = 1;
 
if !audio_is_playing(song)
 {
 audio_play_sound(song, 0, true);
 }
FONT = font_add_sprite(sFont2x, ord(" "), 0, -1);
draw_set_font(FONT)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(surf_black);
surface_free(clip_surface);
surface_free(mask_surface);
clip_surface = -1
mask_surface = -1
surf_black = -1;
clip_width = clip_width*.996
clip_height = clip_height*.996


if instance_number(obj_enemy) &lt;50
{
finder = irandom_range(1,4);
switch (finder)
{
case 1:
instance_create(room_width,random_range(0, room_height),obj_enemy)
break;

case 2:
instance_create(0,random_range(0, room_height),obj_enemy)
break;

case 3:
instance_create(random_range(0, room_width),room_height,obj_enemy)
break;

case 4:
instance_create(random_range(0, room_width),0,obj_enemy)
break;
}
}

val = val+1;

background_hspeed[0] = 1;
background_vspeed[0] = sin(.01*val);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text_color(50,50, "you survived for:"+string(val), c_white, c_white, c_blue, c_red, 1)
draw_text_color(50,75, "speed: "+string(obj_player.speed), c_white, c_white, c_blue, c_red, 1)
draw_text_color(50,100, "dir: "+string(obj_player.direction), c_white, c_white, c_blue, c_red, 1)
draw_text_color(50,125, "A/D: change heading", c_white, c_white, c_blue, c_red, 1)
draw_text_color(50,150, "W/S: speed up/down" , c_white, c_white, c_blue, c_red, 1)
draw_text_color(50,175, "lmb to shoot", c_white, c_white, c_blue, c_red, 1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// create a surface if it doesn't exist:
if (!surface_exists(clip_surface)) {
surf_black= surface_create(room_width, room_height);
}
if (!surface_exists(clip_surface)) {
clip_surface = surface_create(clip_width, clip_height);
}
if (!surface_exists(mask_surface)) {
mask_surface = surface_create(clip_width, clip_height);
}

// clear and start drawing to surface:
//surface_set_target(surf_black);
//    draw_clear(c_black);
//    draw_rectangle(0, 0, room_width,room_height+2, false);
//        draw_set_blend_mode(bm_subtract);
    // cut out shapes out of the mask-surface:
//    draw_circle(obj_player.x, obj_player.y, clip_width/2, false);
//    draw_set_blend_mode(bm_normal);
//surface_reset_target();

surface_set_target(surf_black);
    draw_set_alpha(1)
    draw_set_color(c_black);
    draw_rectangle(0, 0, room_width,room_height+2, false);
surface_reset_target();

surface_set_target(mask_surface);
    draw_clear(c_black);
    draw_set_blend_mode(bm_subtract);
    // cut out shapes out of the mask-surface:
    draw_circle(clip_width/2, clip_width/2, clip_width/2, false);
    draw_set_blend_mode(bm_normal);
surface_reset_target();

surface_set_target(clip_surface);   
draw_clear_alpha(c_black, 0);
// draw things here, subtracting (clip_x, clip_y) from coordinates:
surface_resize(application_surface, room_width, room_height);
draw_surface(application_surface, -obj_player.x + clip_width/2, -obj_player.y+ clip_height/2)
draw_set_blend_mode(bm_subtract);
draw_surface(mask_surface, 0, 0);
draw_set_blend_mode(bm_normal);
//draw_rectangle(0, 0, clip_width,clip_height, true);
// finish and draw the surface itself:
surface_reset_target();

draw_surface(surf_black, 0, 0);
draw_surface(clip_surface, obj_player.x - clip_width/2, obj_player.y- clip_height/2);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
